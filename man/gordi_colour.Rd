% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gordi_colour.R
\name{gordi_colour}
\alias{gordi_colour}
\title{Set colour/fill scales for gordi plots}
\usage{
gordi_colour(
  pass,
  scale = c("continuous", "discrete", "auto", "binned"),
  family = c("viridis", "brewer", "gradient", "steps", "manual", "default"),
  fill = FALSE,
  breaks = waiver(),
  name = waiver(),
  labels = waiver(),
  limits = NULL,
  na.value = "grey50",
  guide = waiver(),
  trans = "identity",
  values = NULL,
  option = NULL,
  direction = 1,
  begin = 0,
  end = 1,
  alpha = 1,
  low = NULL,
  mid = NULL,
  high = NULL,
  midpoint = NULL,
  palette_name = NULL,
  type = NULL,
  bins = NULL,
  n.breaks = NULL
)
}
\arguments{
\item{pass}{A list object produced by \code{\link[gordi]{gordi_read}}}

\item{scale}{Character; One of the scale types: \code{c('continuous', 'discrete', 'auto', 'binned')}.}

\item{family}{Character; One of the palette families: \code{c('viridis', 'brewer', 'gradient', 'steps', 'manual', 'default')}.}

\item{fill}{Logical; If \code{FALSE} (default) operates on the colour aesthetic, if \code{TRUE} operates on the fill aesthetic.}

\item{breaks}{Scale breaks. See \code{scale_colour_...} or \code{scale_fill_...} documentation.}

\item{name}{Scale name. See \code{scale_colour_...} or \code{scale_fill_...} documentation.}

\item{labels}{Labels for scale. See \code{scale_colour_...} or \code{scale_fill_...} documentation.}

\item{limits}{Scale limits. See \code{scale_colour_...} or \code{scale_fill_...} documentation.}

\item{na.value}{Colour used for NA values. Default is \code{'grey50'}.}

\item{guide}{Guide for the scale. See \code{scale_colour_...} or \code{scale_fill_...} documentation.}

\item{trans}{Transformation for the scale. See \code{scale_colour_...} or \code{scale_fill_...} documentation.}

\item{values}{Vector of colours for \code{manual} discrete scale, and for continuous \code{gradientn} and \code{stepsn} variants.}

\item{option, direction, begin, end, alpha}{Options for \code{viridis} scales.}

\item{low, mid, midpoint, high}{Colours for \code{gradient}/\code{gradient2} or \code{steps}/\code{steps2} scales.}

\item{palette_name, type}{Arguments for \code{brewer} scales. \code{palette_name} is the palette name (e.g., \code{'Set1'}).}

\item{bins, n.breaks}{Arguments for \code{binned}/\code{steps} scales. \code{bins} sets the number of bins for \code{brewer} binned scales (\code{fermenter}).}
}
\value{
The updated \code{pass} object with label layers added to \code{pass$plot}. Followed by a fresh \code{ggnewscale} for the same aesthetic (colour or fill).
}
\description{
Adds a colour or fill scale to the current ggplot plot stored in \code{pass$plot} (created by \code{gordi_*()} functions). 
After applying the colour scale, it starts a new independent scale using \code{ggnewscale}, 
so later layers can have their own scale without any interference.
}
\details{
use \code{fill = FALSE} to modify colour scales (default) and \code{fill = TRUE} to modify the fill scales

\strong{Compulsory arguments:}
\itemize{
  \item \code{scale} selects the scale type: \code{'continuous'}, \code{'discrete'}, \code{'binned'} or \code{'auto'}. 
With \code{scale = 'auto'}, the function chooses scale \code{'discrete'} when \code{'values'} are specified (e.g. manual palette), 
otherwise \code{'continuous'}.
  \item \code{family} selects the scale family within the scale type:
  \itemize{
    \item For \code{scale = 'discrete'} -> \code{'manual'}, \code{'viridis'}, \code{'brewer'}, \code{'default'}
    \item For \code{scale = 'continuous'} ->  \code{'viridis'}, \code{'gradient'}, \code{'steps'}, \code{'brewer'}, \code{'default'}
    \item For \code{scale = 'binned'} -> \code{'viridis'}, \code{'brewer'}, \code{'steps'}, \code{'default'}
  }
}
For \code{scale = 'discrete'} and \code{family = 'manual'} you must provide \code{values} (vector of colours)

Argument \code{na.values} sets colours for NA values in the dataset.

#' After adding a certain scale, the function sets a new colour/fill scale with \code{ggnewscale::new_scale_colour()} or
\code{ggnewscale::new_scale_fill()}, so subsequent layers can use a fresh scale.

Call [gordi_colour()] right after you have added a layer that maps colour/fill (e.g. `gordi_species(colour = ...)`, `gordi_sites(fill = ...)`).
If no layer uses colour/fill aesthetic, this function has no effect.
}
\examples{
\dontrun{
# discrete species colours with a brewer palette
gordi_read(m, env, traits) |>
  gordi_species(colour = 'form') |>
  gordi_colour(scale = 'discrete', family = 'brewer', palette_name = 'Set2')

# continuous viridis fill for sites
gordi_read(m, env) |>
  gordi_sites(fill = 'elevation') |>
  gordi_colour(fill = TRUE, scale = 'continuous', family = 'viridis')
}
}
