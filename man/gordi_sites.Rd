% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gordi_sites.R
\name{gordi_sites}
\alias{gordi_sites}
\title{Draw ordination sites.}
\usage{
gordi_sites(
  pass,
  label = TRUE,
  fill = "",
  alpha = "",
  stroke = "",
  shape = "",
  size = "",
  colour = "",
  repel_label = T
)
}
\arguments{
\item{pass}{A list object produced by [gordi_read()]}

\item{label}{Logical; Default is `TRUE`. Draws site labels (`TRUE`) or not (`FALSE`). Site labels can use only the first column of 'site_df', if you want custom labels, please use function [gordi_label()], which overrides label layer settings.}

\item{fill}{Changes site fill colour. Can be either: a variable = a specific column name of 'site_df', a constant value: R colour name, numeric value or hex (e.g. `'green'`, `1`, `'#6aa84f'`). When left as `''`, the internal default colours are used.}

\item{alpha}{Integer; Changes transparency of points. When left as `''`, the internal default values are used (alpha = 1).}

\item{stroke}{Integer; Change shape or arrow width. Defined as numeric values. When left as `''`, the internal default values are used (stroke = 0.5).}

\item{shape}{Integer; Change the shape of points. Either by a specific mapping column from site_df or by a constant (numeric value). When left as `''`, the internal default values are used (shape = 16).}

\item{size}{Integer; Change the size of points. Either by a specific mapping column from site_df or by a constant (numeric value). When left as `''`, the internal default values are used (size = 3).}

\item{colour}{Changes site colours. Can be either: a variable = a specific column name of 'site_df', a constant value: R colour name, numeric value or hex (e.g. `'green'`, `1`, `'#6aa84f'`). When left as `''`, the internal default colours are used.}

\item{repel_label}{Logical; The labels are drawn by [geom_text_repel()]. The default is set to repel_label = TRUE.}
}
\value{
The updated 'pass' object with site layers appended to `pass$plot`.
}
\description{
The function [gordi_sites()] takes the result of [gordi_read()] and adds sites (as points) 
and labels (optional) to a ggplot object created by the function itself. 
In addition to drawing sites you can change a wide range of parameters.
In the process it renames ordination axes to Axis_site1 and Axis_site2, while the original vegan names 
are passed to 'actual_labs' used for plotting.
}
\details{
The function builds a dataframe 'site_df' by binding 'pass$env' and 'pass$site_scores'.
Aesthetics can be mapped by passing a column name present in the site_df dataframe or by using literal values (e.g. hex colour, numeric size).
Fresh colour/fill scales are started for the site layer by ggnewscale::new_scale_colour() and/or ggnewscale::new_scale_fill(), so that later calls (e.g. gordi_colour, layers addded after sites) can define their own independent colour/fill scales.
Additional fresh scales (for size, alpha, stroke, shape) are created at the end of the function, so subsequent layers do not inherit site mappings.
If label = TRUE, site labels are drawn using the first column in site_df dataframe.
The default setting for repel_label is TRUE, so the labels are drawn using `geom_text_repel()`. 
For changing colour and label aesthetics please refer to [gordi_colour()] and [gordi_label()].
}
\examples{
o <- gordi_read(m, dune.env)

# basic sites plot with default styling and labels
o |> gordi_sites()

# mapped colour and size from env dataset, constant alpha, shape, fill
o |> gordi_sites(colour = 'elevation', size = 'elevation', alpha = 0.7, shape = 21, fill = 'white')

# no labels, constant green coloured points
o |> gordi_sites(label = FALSE, colour = 'green')

}
\seealso{
[gordi_read()], [gordi_species()], [gordi_label()], [gordi_colour()], [gordi_predict()], [ggplot2::ggplot()], [ggrepel::geom_text_repel()]
}
