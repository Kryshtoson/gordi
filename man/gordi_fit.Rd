% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gordi_fit.R
\name{gordi_fit}
\alias{gordi_fit}
\title{Filtering species scores based on goodness of fit/frequency.}
\usage{
gordi_fit(
  pass,
  slice_max = NULL,
  abs_frequency = NULL,
  relat_frequency = NULL,
  choices = 1:2,
  summarize = T,
  permutations = 0
)
}
\arguments{
\item{pass}{A list object produced by [gordi_read()].}

\item{slice_max}{Numeric; select rows with the largest values of goodness of fit/R².}

\item{abs_frequency}{Numeric; calculates absolute frequency and selects species with higher frequency than input value.}

\item{relat_frequency}{Numeric; calculates relative frequency and selects species with higher frequency than input value.}

\item{choices}{Numeric vector of selected ordination axes, defaults to the first two axis.}

\item{summarize}{Logical; show only the total value for each site/species, does not work though!}

\item{permutations}{Number of permutations required.}

\item{what}{Character; either 'species' or 'sites'.}

\item{display}{Character; either 'sites' for ordinary site scores and 'lc' for linear combination scores.}
}
\value{
The updated `pass` object with filtered species/site scores.
}
\description{
The function filters species or site scores, based on either goodness of fit or absolute/relative frequency. To filter scores based on goodness of fit, it uses either [goodness()] or [envfit()] function, chosen according to the ordination type. After the filtering, th efunction rewrites the scores object in the list, created by [gordi_read()].
}
\details{
To specify what scores to filter, use argument `what` (what = 'species' or what = 'sites'). If you decide to filter based on goodness of fit you always need to specify `slice_max`, which selects rows with the largest values of a variable (in this case goodness of fit (R²)). The [gordi_fit()] itself chooses based on ordination whether to use [goodness()] or [envfit()] to calculate goodness of fit. If the ordination was not calculated by [capscale()] and falls into one of: CCA, RDA, CA, DCA and PCA, the [goodness()] function is used to calculate goodness of fit. In this case you just need to additionally specify `choices` and `summarize` (otherwise defaults will be used). If the ordination was calculated by [capscale()], R² is automatically calculated by [envfit()]. If this is the case, you need to specify `display`, and optionally `permutations` and `choices`. There is an option to just filter scores based on frequency of occurence. This applies only to species scores and you can use either `abs_frequency` (absolute frequency) or `relat_frequency` (relative frequency). If you want to filter species scores based on frequency as well as goodness of fit, you need to specify both `slice_max` and `abs_frequency`\`relat_frequency` (first the function filters by frequency and then by goodness of fit).
}
\examples{
# Calculate species goodness of fit when m is CCA and filter 30 best fitting species. 
gordi_read(m, env)|> gordi_fit(spe = spe, what = 'species', slice_max = 30, summarize = T)
#Calculate species R² when m is db-RDA and filter 30 best fitting species with absolute occurence more than 5.

}
\seealso{
[gordi_read()], vegan :: [goodness()], vegan :: [envfit()]
}
